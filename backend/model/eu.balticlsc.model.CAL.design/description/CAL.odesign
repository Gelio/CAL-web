<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:validation="http://www.eclipse.org/sirius/description/validation/1.1.0" name="CAL" version="12.0.0.2017041100">
  <ownedViewpoints name="computation" modelFileExtension="CAL">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Computation diagram" initialisation="true" domainClass="CAL::ComputationApplicationRelease" enablePopupBars="true">
      <metamodel href="https://www.balticlsc.eu/model/CAL#/"/>
      <validationSet>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="FlowCannotBeBetweenPinsFromSameUnitCall" level="ERROR" message="Data cannot flow between pins on the same unit call" targetClass="CAL::DataFlow">
          <audits auditExpression="aql:self.source.eContainer() != self.target.eContainer()"/>
          <fixes name="Remove data flow">
            <initialOperation>
              <firstModelOperations xsi:type="tool:RemoveElement"/>
            </initialOperation>
          </fixes>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="RequiredDataPinsMustHaveIncomingDataFlows" level="ERROR" message="Required data pins must have an incoming data flow" targetClass="CAL::ConnectableDataPin">
          <audits auditExpression="aql:self.getDataPin().binding != CAL::DataBinding::Required or self.incoming != null"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="ProvidedDataPinsMustHaveOutgoingDataFlows" level="ERROR" message="Provided data pins must have an outgoing data flow" targetClass="CAL::ConnectableDataPin">
          <audits auditExpression="aql:self.getDataPin().binding != CAL::DataBinding::Provided or self.outgoing != null"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="RequiredDataPinsCannotHaveOutgoingDataFlows" level="ERROR" message="Required data pins cannot have outgoing data flows" targetClass="CAL::ConnectableDataPin">
          <audits auditExpression="aql:self.getDataPin().binding != CAL::DataBinding::Required or self.outgoing == null"/>
          <fixes name="Remove outgoing data flow">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="feature:outgoing">
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </fixes>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="ProvidedDataPinsCannotHaveIncomingDataFlows" level="ERROR" message="Provided data pins cannot have incoming data flows" targetClass="CAL::ConnectableDataPin">
          <audits auditExpression="aql:self.getDataPin().binding != CAL::DataBinding::Provided or self.incoming == null"/>
          <fixes name="Remove incoming data flow">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="feature:incoming">
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </fixes>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="DanglingDataFlow" level="ERROR" message="Both ends of a data flow must be connected" targetClass="CAL::DataFlow">
          <audits auditExpression="aql:self.source != null and self.target != null"/>
          <fixes name="Delete data flow">
            <initialOperation>
              <firstModelOperations xsi:type="tool:RemoveElement"/>
            </initialOperation>
          </fixes>
        </ownedRules>
      </validationSet>
      <defaultLayer name="Default">
        <nodeMappings name="UnitCallNode" deletionDescription="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteUnitCall']" semanticCandidatesExpression="feature:calls" domainClass="CAL::UnitCall">
          <borderedNodeMappings name="ComputedDataPinNode" deletionDescription="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteComputedDataPin']" semanticCandidatesExpression="feature:pins" domainClass="CAL::ComputedDataPin">
            <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql:(if self.declared.binding == CAL::DataBinding::Required then '(in)' else '(out)' endif) + ' ' + self.declared.name" iconPath="/eu.balticlsc.model.CAL.edit/icons/data-pin-single.png" tooltipExpression="aql: (if self.declared.binding == CAL::DataBinding::Required then 'Required' else 'Provided' endif) + ' Data Pin\n' + self.declared.name" sizeComputationExpression="4" workspacePath="/eu.balticlsc.model.CAL.edit/icons/computed-data-pin/single-data-single-token.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:self.name + '\n' + self.unit.name + ' ' + self.unit.version" iconPath="/eu.balticlsc.model.CAL.edit/icons/unit-call.png" tooltipExpression="feature:name" sizeComputationExpression="0" labelPosition="node" resizeKind="NSEW" width="25" height="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ApplicationDataPin" deletionDescription="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteApplicationDataPin']" semanticCandidatesExpression="feature:applicationDataPins" domainClass="CAL::ApplicationDataPin">
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql:(if self.binding == CAL::DataBinding::Required then '(in)' else '(out)' endif) + ' ' + self.name" iconPath="/eu.balticlsc.model.CAL.edit/icons/application-data-pin-single.png" tooltipExpression="aql: (if self.binding == CAL::DataBinding::Required then 'Required' else 'Provided' endif) + ' Data Pin\n' + self.name" sizeComputationExpression="4" workspacePath="/eu.balticlsc.model.CAL.edit/icons/application-data-pin/provided/single-data-single-token.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="DataFlow" semanticCandidatesExpression="feature:flows" sourceMapping="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='UnitCallNode']/@borderedNodeMappings[name='ComputedDataPinNode'] //@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='ApplicationDataPin']" targetMapping="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='UnitCallNode']/@borderedNodeMappings[name='ComputedDataPinNode'] //@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='ApplicationDataPin']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" domainClass="CAL::DataFlow" useDomainElement="true" reconnections="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectDataFlowTarget'] //@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectDataFlowSource']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="Tools">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" documentation="Creates a new node to call the Computation Unit Release.&#xA;&#xA;Shows a dialog to pick the unit release to call.&#xA;&#xA;This tool does not work in SIrius Web." name="UnitCall" label="Unit Call (works only in Sirius Desktop)" nodeMappings="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='UnitCallNode']" iconPath="/eu.balticlsc.model.CAL.edit/icons/unit-call.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CAL::UnitCall" referenceName="calls">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="New Unit Call"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Select Unit Release">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" isEnabledExpression="aql:instance.unit != null" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Create a Unit Call" domainClass="CAL::UnitCall" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='UnitCall']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.1/@groups.0"/>
                    <groups name="Default Group" labelExpression="Unit Call" domainClass="CAL::UnitCall" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Name" labelExpression="Name" valueExpression="aql:self.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" name="UnitRelease" labelExpression="Unit Release" helpExpression="This is the release of a Computation Unit that will be called." valueExpression="aql:instance.unit" candidatesExpression="aql:self.eContainer(CAL::ComputationApplicationRelease).units" candidateDisplayExpression="aql:candidate.name + ' ' + candidate.version">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="unit" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" documentation="Creates a new empty node to call the Computation Unit Release.&#xA;&#xA;The unit release to call should be selected in the object's properties afterwards.&#xA;&#xA;This tool works in Sirius Web." name="EmptyUnitCall" label="Empty Unit Call" nodeMappings="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='UnitCallNode']" iconPath="/eu.balticlsc.model.CAL.edit/icons/unit-call.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CAL::UnitCall" referenceName="calls">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="New Unit Call"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" documentation="Enforces some DataFlow rules." name="DataFlow" label="Data Flow" precondition="service:isValidEdgeTarget(preSource, preTarget)" edgeMappings="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@edgeMappings[name='DataFlow']" connectionStartPrecondition="service:isValidEdgeSource(preSource)">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainer(CAL::ComputationApplicationRelease)">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CAL::DataFlow" referenceName="flows">
                  <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" documentation="&quot;element&quot; variable cannot be used in &quot;Precondition&quot;. Thus, this tool uses &quot;self.source&quot; instead of &quot;element&quot;.&#xA;Enforces similar rules to DataFlow creation." name="ReconnectDataFlowTarget" precondition="aql:self.isValidEdgeTarget(self.source, target)">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" documentation="&quot;element&quot; variable cannot be used in &quot;Precondition&quot;. Thus, this tool uses &quot;self.target&quot; instead of &quot;element&quot;.&#xA;Enforces similar rules to DataFlow creation." name="ReconnectDataFlowSource" precondition="aql:self.isValidEdgeSource(target) and self.isValidEdgeTarget(target, self.target)" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" documentation="Remove DataFlows when removing the unit call." name="DeleteUnitCall">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:For" expression="aql:self.pins.incoming" iteratorName="incomingDataFlow">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self != null">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:For" expression="aql:self.pins.outgoing" iteratorName="outgoingDataFlow">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self != null">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" documentation="Removing data pins is forbidden. They are determined by the ComputationUnitCall." name="DeleteComputedDataPin" precondition="aql:false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" documentation="Remove DataFlows when removing the ApplicationDataPin." name="DeleteApplicationDataPin">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.incoming != null">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.incoming">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.outgoing != null">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.outgoing">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ApplicationRequiredDataPin" label="Diagram Out Data Pin" nodeMappings="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='ApplicationDataPin']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CAL::ApplicationDataPin" referenceName="applicationDataPins">
                  <subModelOperations xsi:type="tool:SetValue" featureName="binding" valueExpression="aql:CAL::DataBinding::Required"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="Diagram out data pin"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ApplicationProvidedDataPin" label="Diagram In Data Pin" nodeMappings="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='ApplicationDataPin']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="CAL::ApplicationDataPin" referenceName="applicationDataPins">
                  <subModelOperations xsi:type="tool:SetValue" featureName="binding" valueExpression="aql:CAL::DataBinding::Provided"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="Diagram in data pin"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.declared.binding == CAL::DataBinding::Required">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='UnitCallNode']/@borderedNodeMappings[name='ComputedDataPinNode']/@style //@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='ApplicationDataPin']/@style" referenceName="borderColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(CAL::ApplicationDataPin)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='ApplicationDataPin']/@style" attributeName="workspacePath" value="aql:'/eu.balticlsc.model.CAL.edit/icons/application-data-pin/' + (if self.binding == CAL::DataBinding::Provided then 'provided/' else 'required/' endif) + self.getDataPinIconPath()"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(CAL::ComputedDataPin)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='computation']/@ownedRepresentations[name='Computation%20diagram']/@defaultLayer/@nodeMappings[name='UnitCallNode']/@borderedNodeMappings[name='ComputedDataPinNode']/@style" attributeName="workspacePath" value="aql:'/eu.balticlsc.model.CAL.edit/icons/computed-data-pin/' + self.declared.getDataPinIconPath()"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="eu.balticlsc.model.CAL.design.Services"/>
  </ownedViewpoints>
</description:Group>
